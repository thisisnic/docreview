
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: r-lib checks

jobs:
  r-libs-check:
    runs-on: ubuntu-latest

    name: r-libs-check

    strategy:
      fail-fast: false
    env:
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: latest

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Install dependencies
        run: |
          install.packages(c('remotes', 'rvest', 'purrr', 'withr', 'remotes', 'rlang'))
        shell: Rscript {0}


      - name: Check docreview against recently updated r-lib packages
        run: |
          devtools::load_all()
          library(rvest)
          links <- read_html("https://github.com/orgs/r-lib/repositories?q=&type=&language=r&sort=") %>%
            html_nodes(".wb-break-all .d-inline-block") %>%
            html_attr("href")

          build_and_review <- function(link){
            td <- tempfile()
            dir.create(td)
            on.exit(unlink(td))

            tryCatch({
              clone_url <- paste("https://github.com", link, ".git", sep="")
              withr::with_dir(
                td,
                system(paste("git clone ", clone_url, sep = ""))
              )

              pkg <- gsub("/r-lib/", "", link)
              path <- file.path(td, pkg)
              # vignettes call library(pkg) so the packages need installing first
              remotes::install_local(path = path, build_vignettes = TRUE, upgrade = "always")
              tools::buildVignettes(dir=path)
              package_review(path)
            },
            error = function(e){
              rlang::warn(
                paste("Could not build vignettes for package:", pkg, ":\n", e$message)
              )
            })
          }

          purrr::walk(links, build_and_review)
          install.packages("devtools")
          devtools::load_all()
          tools::buildVignettes(dir = ".")
          docreview::package_review(config = get_config(system.file(package="docreview", "configs", "error.yml", mustWork = TRUE)))
        shell: Rscript {0}
